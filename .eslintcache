[{"/Users/fuyangzhen/WebstormProjects/pure-cra/src/App.js":"1","/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/index.js":"2","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Login.jsx":"3","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Dashboard.jsx":"4","/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/mutations.js":"5","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/TaskList.jsx":"6","/Users/fuyangzhen/WebstormProjects/pure-cra/src/index.js":"7","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Main.jsx":"8","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/TaskDetail.jsx":"9","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Navigation.jsx":"10","/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/sagas.js":"11","/Users/fuyangzhen/WebstormProjects/pure-cra/src/reportWebVitals.js":"12","/Users/fuyangzhen/WebstormProjects/pure-cra/src/server/defaultState.js":"13","/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/history.js":"14"},{"size":200,"mtime":1609040406177,"results":"15","hashOfConfig":"16"},{"size":2750,"mtime":1608817294223,"results":"17","hashOfConfig":"16"},{"size":1225,"mtime":1609040812141,"results":"18","hashOfConfig":"16"},{"size":468,"mtime":1609040695416,"results":"19","hashOfConfig":"16"},{"size":1446,"mtime":1608649662397,"results":"20","hashOfConfig":"16"},{"size":1022,"mtime":1609042687616,"results":"21","hashOfConfig":"16"},{"size":454,"mtime":1608386325337,"results":"22","hashOfConfig":"16"},{"size":1093,"mtime":1608813201601,"results":"23","hashOfConfig":"16"},{"size":1978,"mtime":1609042555639,"results":"24","hashOfConfig":"16"},{"size":314,"mtime":1609055820684,"results":"25","hashOfConfig":"16"},{"size":1840,"mtime":1608972615575,"results":"26","hashOfConfig":"16"},{"size":362,"mtime":1607005918555,"results":"27","hashOfConfig":"16"},{"size":871,"mtime":1608559930693,"results":"28","hashOfConfig":"16"},{"size":93,"mtime":1607138777505,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1ek6p33",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/fuyangzhen/WebstormProjects/pure-cra/src/App.js",["62","63"],"import logo from './logo.svg';\nimport './App.css';\nimport { store } from './store';\nimport { Main } from './components/Main';\n\nfunction App() {\n  return (\n        <Main />\n  );\n}\n\nexport default App;\n",["64","65"],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/index.js",["66","67"],"import {applyMiddleware, createStore, combineReducers} from \"redux\";\nimport {defaultState} from \"../server/defaultState\";\nimport {createLogger} from \"redux-logger/src\";\nimport createSagaMiddleware from 'redux-saga';\nimport {rootSaga} from './sagas';\n\nimport * as mutations from './mutations';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  //reducer 定义了具体如何更新action,saga中间件在redux中提供了监控机制\n  combineReducers({\n    session(userSession = defaultState.session || {}, action) {\n      const {type, authenticated, session} = action;\n      switch (type) {\n        case mutations.REQUEST_AUTH_USER:\n          return {...userSession, authenticated: mutations.AUTHENTICATING};\n        case mutations.PROCESSING_AUTH_USER:\n          return {...userSession, authenticated};\n        case mutations.SET_STATE:\n          return {...userSession, id: action.state.session.id};\n        default:\n          return userSession;\n      }\n    },\n    tasks(tasks = defaultState.tasks, action) {\n      switch (action.type) {\n        case mutations.SET_STATE:\n          return action.state.tasks;\n        case mutations.CREATE_TASK:\n          return [...tasks, {\n            id: action.taskID,\n            name: \"New Task\",\n            group: action.groupID,\n            owner: action.ownerID,\n            isComplete: false\n          }]\n        case mutations.SET_TASK_COMPLETION:\n          return tasks.map(task => (\n            task.id === action.taskID ?\n              {...task, isComplete: action.isComplete, group: action.isComplete ? \"G3\" : \"G1\"}\n              : task\n          ));\n        case mutations.SET_TASK_NAME:\n          return tasks.map(task => (\n            task.id === action.taskID ? {...task, name: action.taskName} : task\n          ));\n        case mutations.SET_TASK_GROUP:\n          return tasks.map(task => (\n            task.id === action.taskID ? {...task, group: action.taskGroup} : task\n          ));\n        default:\n          return tasks;\n      }\n      return tasks;\n    },\n    comments(comments = defaultState.comments) {\n      return comments;\n    },\n    groups(groups = defaultState.groups, action) {\n      switch (action.type) {\n        case mutations.SET_STATE:\n          return action.state.groups;\n        default:\n          return groups;\n      }\n    },\n    users(users = defaultState.users, action) {\n      switch (action.type) {\n        case mutations.SET_STATE:\n          return action.state.users;\n        default:\n          return users;\n      }\n    }\n  }),\n  applyMiddleware(createLogger(), sagaMiddleware)\n  )\n;\n\n//run: 开始注册运行saga，saga中在监控action,再根据监控的action去操作创建出新的action\nsagaMiddleware.run(rootSaga);\n","/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Login.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Dashboard.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/mutations.js",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/TaskList.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/index.js",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Main.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/TaskDetail.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/components/Navigation.jsx",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/sagas.js",["68","69"],"import {\n  take,\n  put,\n  fork,\n  all\n} from 'redux-saga/effects';\nimport * as mutations from './mutations';\nimport {v4 as uuid} from 'uuid';\nimport axios from 'axios';\nimport {history} from './history';\n\nconst url = process.env.NODE_ENV === 'production' ? `` : \"http://localhost:8888\";\n\nexport function* taskCreationSaga() {\n  while (true) {\n    const entity = yield take(mutations.REQUEST_TASK_CREATION);\n    const {groupID} = entity;\n    const ownerID = `U1`;\n    const taskID = uuid();\n    yield put(mutations.createTask(taskID, groupID, ownerID));\n    const {res} = yield axios.post(url + '/task/new', {\n      task: {\n        id: taskID,\n        group: groupID,\n        owner: ownerID,\n        isComplete: false,\n        name: \"New task\"\n      }\n    });\n  }\n}\n\nexport function* taskModificationSaga() {\n  while (true) {\n    const updateAction = yield take([\n      mutations.SET_TASK_GROUP,\n      mutations.SET_TASK_NAME,\n      mutations.SET_TASK_COMPLETION\n    ]);\n    const {res} = yield axios.post(url + '/task/update', {\n      task: {\n        id: updateAction.taskID,\n        group: updateAction.taskGroup,\n        name: updateAction.taskName,\n        isComplete: updateAction.isComplete\n      }\n    })\n  }\n}\n\nexport function* userAuthenticationSage() {\n  while (true) {\n    const {username, password} = yield take(mutations.REQUEST_AUTH_USER);\n    try {\n      const {data} = yield axios.post(url + `/authenticate`, {username, password});\n      yield put(mutations.setState(data.state));\n      history.push(`/dashboard`);\n      if (!data) {\n        throw new Error();\n      }\n    } catch (e) {\n      yield put(mutations.processAuthenticateUser(mutations.NOT_AUTHENTICATED));\n    }\n\n  }\n}\n\nexport function* rootSaga() {\n  yield all([\n    fork(taskCreationSaga),\n    fork(taskModificationSaga),\n    fork(userAuthenticationSage)\n  ])\n}","/Users/fuyangzhen/WebstormProjects/pure-cra/src/reportWebVitals.js",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/server/defaultState.js",[],"/Users/fuyangzhen/WebstormProjects/pure-cra/src/store/history.js",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"79","line":15,"column":35,"nodeType":"72","messageId":"73","endLine":15,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":56,"column":7,"nodeType":"82","messageId":"83","endLine":56,"endColumn":20},{"ruleId":"70","severity":1,"message":"84","line":21,"column":12,"nodeType":"72","messageId":"73","endLine":21,"endColumn":15},{"ruleId":"70","severity":1,"message":"84","line":40,"column":12,"nodeType":"72","messageId":"73","endLine":40,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'session' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]